{"version":3,"sources":["Todo.js","FormTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","cancelTodo","deleteTodo","className","style","textDecoration","done","text","Button","variant","onClick","FormTodo","addTodo","React","useState","value","setValue","Form","onSubmit","e","preventDefault","Group","Label","Control","type","onChange","target","placeholder","App","todos","setTodos","newTodos","splice","map","Card","Body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAEe,SAASA,EAAT,GAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WACtD,OACE,sBAAKC,UAAU,OAAf,UACE,sBAAMC,MAAO,CAAEC,eAAgBN,EAAKO,KAAO,eAAiB,IAA5D,SACGP,EAAKQ,OAER,gCACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,kBAAkBC,QAAS,kBAAMT,EAAWD,IAA5D,oBAGA,cAACQ,EAAA,EAAD,CAAQC,QAAQ,iBAAiBC,QAAS,kBAAMR,EAAWF,IAA3D,0B,YCVO,SAASW,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QAAW,EAClBC,IAAMC,SAAS,IADG,mBACrCC,EADqC,KAC9BC,EAD8B,KAU5C,OACE,eAACC,EAAA,EAAD,CAAMC,SARa,SAACC,GACpBA,EAAEC,iBACGL,IACLH,EAAQG,GACRC,EAAS,MAIT,UACE,eAACC,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,UACE,2CAEF,cAACL,EAAA,EAAKM,QAAN,CACEC,KAAK,OACLrB,UAAU,QACVY,MAAOA,EACPU,SAAU,SAACN,GAAD,OAAOH,EAASG,EAAEO,OAAOX,QACnCY,YAAY,oBAGhB,cAACnB,EAAA,EAAD,CAAQC,QAAQ,eAAee,KAAK,SAApC,uBC+BSI,MAlDf,WAAgB,IAAD,EACaf,IAAMC,SAAS,CACvC,CACEP,KAAM,iCACND,MAAM,KAJG,mBACNuB,EADM,KACCC,EADD,KAaP7B,EAAa,SAACD,GAClB,IAAM+B,EAAQ,YAAOF,GACrBE,EAAS/B,GAAOM,MAAO,EACvBwB,EAASC,IAGL7B,EAAa,SAACF,GAClB,IAAM+B,EAAQ,YAAOF,GACrBE,EAASC,OAAOhC,EAAO,GACvB8B,EAASC,IAGX,OACE,qBAAK5B,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,mBAAd,uBACA,cAACQ,EAAD,CAAUC,QArBA,SAACL,GACf,IAAMwB,EAAQ,sBAAOF,GAAP,CAAc,CAAEtB,UAC9BuB,EAASC,MAoBL,8BACGF,EAAMI,KAAI,SAAClC,EAAMC,GAAP,OACT,cAACkC,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,cAACrC,EAAD,CAEEE,MAAOA,EACPD,KAAMA,EACNE,WAAYA,EACZC,WAAYA,GAJPF,kBC9BRoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0f35726c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nexport default function Todo({ todo, index, cancelTodo, deleteTodo }) {\n  return (\n    <div className=\"todo\">\n      <span style={{ textDecoration: todo.done ? \"line-through\" : \"\" }}>\n        {todo.text}\n      </span>\n      <div>\n        <Button variant=\"outline-success\" onClick={() => cancelTodo(index)}>\n          Cancel\n        </Button>\n        <Button variant=\"outline-danger\" onClick={() => deleteTodo(index)}>\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nexport default function FormTodo({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group>\n        <Form.Label>\n          <b>Add Todo</b>\n        </Form.Label>\n        <Form.Control\n          type=\"text\"\n          className=\"input\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          placeholder=\"Add new todo\"\n        />\n      </Form.Group>\n      <Button variant=\"primary mb-3\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Card } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Todo from \"./Todo\";\nimport FormTodo from \"./FormTodo\";\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    {\n      text: \"This is a default initial todo\",\n      done: false,\n    },\n  ]);\n\n  const addTodo = (text) => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const cancelTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos[index].done = true;\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 className=\"text-center mb-4\">Todo List</h1>\n        <FormTodo addTodo={addTodo} />\n        <div>\n          {todos.map((todo, index) => (\n            <Card>\n              <Card.Body>\n                <Todo\n                  key={index}\n                  index={index}\n                  todo={todo}\n                  cancelTodo={cancelTodo}\n                  deleteTodo={deleteTodo}\n                />\n              </Card.Body>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}